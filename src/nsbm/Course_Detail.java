/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nsbm;

import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class Course_Detail extends javax.swing.JFrame {

    DB_Operation dbops=new DB_Operation();
    UnderGraduate_CourseDetail ugcd=new UnderGraduate_CourseDetail();
    
    public Course_Detail() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ddFaculty = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtRegId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ddCourseId = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ddMainSubject1 = new javax.swing.JComboBox();
        ddMainSubject2 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        ddSubject1 = new javax.swing.JComboBox();
        ddSubject2 = new javax.swing.JComboBox();
        ddSubject3 = new javax.swing.JComboBox();
        ddSubject4 = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ddNumOfYears = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(178, 133, 227));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Detail"));

        jLabel1.setText("Faculty");

        ddFaculty.setBackground(new java.awt.Color(102, 153, 255));
        ddFaculty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "School of Business", "School of Computing", "School of Engineering" }));
        ddFaculty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddFacultyItemStateChanged(evt);
            }
        });
        ddFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddFacultyActionPerformed(evt);
            }
        });

        jLabel2.setText("Reg Id");

        jLabel3.setText("Course Id");

        ddCourseId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddCourseIdItemStateChanged(evt);
            }
        });

        jLabel4.setText("Main Subject 1");

        jLabel5.setText("Main Subject 2");

        jTextField2.setBackground(new java.awt.Color(221, 219, 223));
        jTextField2.setText("Credit 2 Subjects");

        jLabel6.setText("Subject 1");

        jLabel7.setText("Subject 2");

        jLabel8.setText("Subject 3");

        jLabel9.setText("Subject 4");

        jTextField3.setBackground(new java.awt.Color(221, 219, 223));
        jTextField3.setText("Credit 3 Subjects");

        btnBack.setBackground(new java.awt.Color(106, 14, 209));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel10.setText("Number Of Years");

        ddNumOfYears.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "03", "04" }));

        btnSubmit.setBackground(new java.awt.Color(106, 14, 209));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel3))
                                    .addGap(1, 1, 1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel6))))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmit)
                    .addComponent(ddFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddMainSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddMainSubject2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddSubject2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddSubject3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddSubject4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRegId, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ddCourseId, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ddNumOfYears, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ddFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRegId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ddCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ddNumOfYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ddMainSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ddMainSubject2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ddSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ddSubject2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(ddSubject3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ddSubject4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ddFacultyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddFacultyItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddFaculty.getSelectedIndex()>=0){
                this.ddCourseId.setModel(new DefaultComboBoxModel(this.getcourseid(this.ddFaculty.getSelectedItem().toString())));
            }
        }
    }//GEN-LAST:event_ddFacultyItemStateChanged
public String[] getcourseid(String pais){
       String[] courseid=new String[9];
       if(pais.equalsIgnoreCase("School of Computing")){
       courseid[0]="Select";
       courseid[1]="cs 1.1";
       courseid[2]="cs 1.2";
       courseid[3]="cs 2.1";
       courseid[4]="cs 2.2";
       courseid[5]="cs 3.1";
       courseid[6]="cs 3.2";
       courseid[7]="cs 4.1";
       courseid[8]="cs 4.2";
       }
       
        if(pais.equalsIgnoreCase("School of Business")){
       courseid[0]="Select";
       courseid[1]="bus 1.1";
       courseid[2]="bus 1.2";
       courseid[3]="bus 2.1";
       courseid[4]="bus 2.2";
       courseid[5]="bus 3.1";
       courseid[6]="bus 3.2";
       courseid[7]="bus 4.1";
       courseid[8]="bus 4.2";
       }
       
       if(pais.equalsIgnoreCase("School of Engineering")){
       courseid[0]="Select";
       courseid[1]="eng 1.1";
       courseid[2]="eng 1.2";
       courseid[3]="eng 2.1";
       courseid[4]="eng 2.2";
       courseid[5]="eng 3.1";
       courseid[6]="eng 3.2";
       courseid[7]="eng 4.1";
       courseid[8]="eng 4.2";
       }
       
       return courseid; 
   
   } 

     public String[] getmainsubject1(String pais){
        String[] mainsubject1=new String[2];
        if(pais.equalsIgnoreCase("cs 1.1")){
            mainsubject1[0]="High Speed Networks";
            
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
            mainsubject1[0]="Calculus";
            
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
            mainsubject1[0]="Management Theory and Practice";
           
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
            mainsubject1[0]="ICT Tools";
           
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
            mainsubject1[0]="Environment and Energy Studies";
           
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
            mainsubject1[0]="Management of Change";
           
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
            mainsubject1[0]="Computer Security (Elective)";
            
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            mainsubject1[0]="Community Services";
          
        }
          if(pais.equalsIgnoreCase("bus 2.1")){
            mainsubject1[0]="Research Methods";
           
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            
            mainsubject1[0]="Software Testing and Quality Assurance (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
            
            mainsubject1[0]="Heat and Mass Transfer";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
           
            mainsubject1[0]="Management of Change";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
           
            mainsubject1[0]="Project Part- I";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
            mainsubject1[0]="Law for Engineers";
            
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
            mainsubject1[0]="Current Developments in Accounting Thought";
           
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
            mainsubject1[0]="Compiler Design";
           
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
            mainsubject1[0]="Thermal Engineering";
           
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
           
            mainsubject1[0]="Investments Analysis";
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            mainsubject1[0]="Cyber Security";
           
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
          
            mainsubject1[0]="Control Engineering";
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
            mainsubject1[0]="Management of Change";
         
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
           
            mainsubject1[1]="Software Testing and Quality Assurance (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
            mainsubject1[0]="Heat and Mass Transfer";
           
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
            mainsubject1[0]="Human Resource Management";
            
        } 
          return mainsubject1;
              
    }
   
    public String[] getmainsubject2(String pais){
        String[] mainsubject2=new String[1];
        if(pais.equalsIgnoreCase("cs 1.1")){
            mainsubject2[0]="ICT Tools";
            
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
            mainsubject2[0]="Heat and Mass Transfer";
            
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
            mainsubject2[0]="Human Resource Management";
           
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
            mainsubject2[0]="Cyber Security";
           
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
            mainsubject2[0]="Ethics & Values";
           
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
            mainsubject2[0]="Current Developments in Accounting Thought";
           
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
            mainsubject2[0]="Cyber Security";
            
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            mainsubject2[0]="Community Services";
           
        }
          if(pais.equalsIgnoreCase("bus 2.1")){
            mainsubject2[0]="Current Developments in Accounting Thought";
             
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            
            mainsubject2[0]="Data Structure and Algorithms";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
           
            mainsubject2[0]="Control Engineering";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
           
            mainsubject2[0]="Marketing Management";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
          
            mainsubject2[0]="Project Part- I";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
           
            mainsubject2[1]="Heat and Mass Transfer";
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
            mainsubject2[0]="Business Economics";
           
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
            mainsubject2[0]="Artificial Intelligence (Elective)";
            
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
            mainsubject2[0]="Electrical Workshop Practices";
           
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
            mainsubject2[0]="Management of Change";
           
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            mainsubject2[0]="High Speed Networks";
           
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
              mainsubject2[0]="Community Services";
           
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
             mainsubject2[0]="Human Resource Management";
            
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
            mainsubject2[0]="Computer Security (Elective)";
            
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
            mainsubject2[0]="Mechanical Workshop Practices";
            
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
            mainsubject2[0]="Taxation 1";
           
        } 
          return mainsubject2;
              
    }
    
    public String[] getsubject1(String pais){
        String[] subject1=new String[3];
        if(pais.equalsIgnoreCase("cs 1.1")){
            subject1[0]="Data Structure and Algorithms";
            subject1[1]="ICT Tools";
            subject1[2]="Database Systems";
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
            subject1[0]="Physics";
            subject1[1]="Kinematics";
            subject1[2]="Mechanics of Solids";
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
           subject1[0]="Taxation 1";
           subject1[1]="Business and Corporations Law";
           subject1[2]="IT Risk Management";
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
            subject1[0]="High Speed Networks";
            subject1[1]="Data Structure and Algorithms";
            subject1[2]="ICT Tools";
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
            subject1[0]="Law for Engineers";
            subject1[1]="Capston Course (Mechanical Engineering)";
            subject1[2]="Yog and Meditation";
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
           subject1[0]="Human Resource Management";
           subject1[1]="Management of Change";
           subject1[2]="Strategic Human Resource Development";
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
            subject1[0]="Artificial Intelligence (Elective)";
            subject1[1]="Distributed and Parallel Systems";
            subject1[2]="High Speed Networks";
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            subject1[0]="Linear Algebra";
            subject1[1]="Engineering Graphics";
            subject1[2]="Critical Thinking";
        }
          if(pais.equalsIgnoreCase("bus 2.1")){
            subject1[0]="Organisational Behaviour";
            subject1[1]="IT Management Issues";
            subject1[2]="Integrated Marketing Communications";
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            subject1[0]="Computer Architecture";
            subject1[1]="Software Engineering";
            subject1[2]="Data Warehousing and Mining (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
            subject1[0]="Linear Algebra";
            subject1[1]="Engineering Graphics";
            subject1[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
           subject1[0]="Human Resource Management";
           subject1[1]="Management of Change";
           subject1[2]="Taxation 1";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
           subject1[0]="Cyber Security";
           subject1[1]="Project Part- I";
           subject1[2]="Practical Training";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
           subject1[0]="Thermal Engineering";
           subject1[1]="Control Engineering";
           subject1[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
           subject1[0]="Current Developments in Accounting Thought";
           subject1[1]="Investments Analysis";
           subject1[2]="ICT Project Management";
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
           subject1[0]="High Speed Networks";
           subject1[1]="Data Structure and Algorithms";
           subject1[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
           subject1[0]="Mini Project – II";
           subject1[1]="Control Engineering";
           subject1[2]="Elements of Electrical Engineering";
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
           subject1[0]="Management of Change";
           subject1[1]="Marketing Management";
           subject1[2]="Advanced Studies in industrial Relations";
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            subject1[0]="ICT Tools";
            subject1[1]="Software Testing and Quality Assurance (Elective)";
            subject1[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
            subject1[0]="Linear Algebra";
            subject1[1]="Engineering Graphics";
            subject1[2]="Ethics & Values";
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
             subject1[0]="Human Resource Management";
             subject1[1]="Corporate Finance";
             subject1[2]="Financial Planning";
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
             subject1[0]="High Speed Networks";
             subject1[1]="Data Structure and Algorithms";
             subject1[2]="Cloud Computing (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
             subject1[0]="Ethics & Values";
             subject1[1]="Thermodynamics";
             subject1[2]="Dynamics of Machinery I";
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
            subject1[0]="International Human Resource Management";
            subject1[1]="Business and Corporations Law";
            subject1[2]="Marketing Management";
        } 
          return subject1;
              
    }
    
     public String[] getsubject2(String pais){
        String[] subject2=new String[3];
        if(pais.equalsIgnoreCase("cs 1.1")){
            subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Cloud Computing (Elective)";
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
             subject2[0]="Ethics & Values";
            subject2[1]="Thermodynamics";
            subject2[2]="Dynamics of Machinery I";
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
            subject2[0]="International Human Resource Management";
            subject2[1]="Business and Corporations Law";
            subject2[2]="Marketing Management";
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
           subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
              subject2[0]="Linear Algebra";
            subject2[1]="Engineering Graphics";
            subject2[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
            subject2[0]="Current Developments in Accounting Thought";
            subject2[1]="Investments Analysis";
            subject2[2]="ICT Project Management";
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
           subject2[0]="ICT Tools";
            subject2[1]="Software Testing and Quality Assurance (Elective)";
            subject2[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            subject2[0]="Thermal Engineering";
            subject2[1]="Control Engineering";
            subject2[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 2.1")){
            subject2[0]="Human Resource Management";
            subject2[1]="Management of Change";
            subject2[2]="Taxation 1";
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
             subject2[0]="Linear Algebra";
            subject2[1]="Engineering Graphics";
            subject2[2]="Critical Thinking";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
            subject2[0]="International Human Resource Management";
            subject2[1]="Business and Corporations Law";
            subject2[2]="Marketing Management";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
            subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Cloud Computing (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
            subject2[0]="Thermal Engineering";
            subject2[1]="Control Engineering";
            subject2[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
           subject2[0]="Current Developments in Accounting Thought";
            subject2[1]="Investments Analysis";
            subject2[2]="ICT Project Management";
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
             subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
             subject2[0]="Mini Project – II";
            subject2[1]="Control Engineering";
            subject2[2]="Elements of Electrical Engineering";
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
            subject2[0]="Management of Change";
            subject2[1]="Marketing Management";
            subject2 [2]="Advanced Studies in industrial Relations";
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            subject2[0]="ICT Tools";
            subject2[1]="Software Testing and Quality Assurance (Elective)";
            subject2[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
            subject2[0]="Linear Algebra";
            subject2[1]="Engineering Graphics";
            subject2[2]="Ethics & Values";
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
             subject2[0]="Human Resource Management";
            subject2[1]="Corporate Finance";
            subject2[2]="Financial Planning";
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
             subject2[0]="High Speed Networks";
            subject2[1]="Data Structure and Algorithms";
            subject2[2]="Cloud Computing (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
            subject2[0]="Ethics & Values";
            subject2[1]="Thermodynamics";
            subject2[2]="Dynamics of Machinery I";
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
            subject2[0]="International Human Resource Management";
            subject2[1]="Business and Corporations Law";
            subject2[2]="Marketing Management";
        } 
          return subject2;
              
    }
    
    public String[] getsubject3(String pais){
        String[] subject3=new String[3];
        if(pais.equalsIgnoreCase("cs 1.1")){
            subject3[0]="High Speed Networks";
            subject3[1]="Data Structure and Algorithms";
            subject3[2]="ICT Tools";
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
            subject3[0]="Linear Algebra";
            subject3[1]="Engineering Graphics";
            subject3[2]="Ethics & Values";
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
             subject3[0]="International Human Resource Management";
            subject3[1]="Business and Corporations Law";
            subject3[2]="Marketing Management";
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
            subject3[0]="ICT Tools";
            subject3[1]="Software Testing and Quality Assurance (Elective)";
            subject3[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
            subject3[0]="Thermal Engineering";
            subject3[1]="Control Engineering";
            subject3[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
           subject3[0]="Human Resource Management";
            subject3[1]="Management of Change";
            subject3[2]="Strategic Human Resource Development";
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
            subject3[0]="Artificial Intelligence (Elective)";
            subject3[1]="Distributed and Parallel Systems";
            subject3[2]="High Speed Networks";
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            subject3[0]="Linear Algebra";
            subject3[1]="Engineering Graphics";
            subject3[2]="Critical Thinking";
        }
          if(pais.equalsIgnoreCase("bus 2.1")){
            subject3[0]="Organisational Behaviour";
            subject3[1]="IT Management Issues";
            subject3[2]="Integrated Marketing Communications";
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            subject3[0]="Computer Architecture";
            subject3[1]="Software Engineering";
            subject3[2]="Data Warehousing and Mining (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
            subject3[0]="Linear Algebra";
            subject3[1]="Engineering Graphics";
            subject3[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
           subject3[0]="Human Resource Management";
            subject3[1]="Management of Change";
            subject3[2]="Taxation 1";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
            subject3[0]="Cyber Security";
            subject3[1]="Project Part- I";
            subject3[2]="Practical Training";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
            subject3[0]="Thermal Engineering";
            subject3[1]="Control Engineering";
            subject3[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
           subject3[0]="Current Developments in Accounting Thought";
            subject3[1]="Investments Analysis";
            subject3[2]="ICT Project Management";
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
             subject3[0]="High Speed Networks";
            subject3[1]="Data Structure and Algorithms";
            subject3[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
             subject3[0]="Mini Project – II";
            subject3[1]="Control Engineering";
            subject3[2]="Elements of Electrical Engineering";
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
            subject3[0]="Management of Change";
            subject3[1]="Marketing Management";
            subject3[2]="Advanced Studies in industrial Relations";
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            subject3[0]="ICT Tools";
            subject3[1]="Software Testing and Quality Assurance (Elective)";
            subject3[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
            subject3[0]="Linear Algebra";
            subject3[1]="Engineering Graphics";
            subject3[2]="Ethics & Values";
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
             subject3[0]="Human Resource Management";
            subject3[1]="Corporate Finance";
            subject3[2]="Financial Planning";
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
             subject3[0]="High Speed Networks";
            subject3[1]="Data Structure and Algorithms";
            subject3[2]="Cloud Computing (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
            subject3[0]="Ethics & Values";
            subject3[1]="Thermodynamics";
            subject3[2]="Dynamics of Machinery I";
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
            subject3[0]="International Human Resource Management";
            subject3[1]="Business and Corporations Law";
            subject3[2]="Marketing Management";
        } 
          return subject3;
              
    }
    
    public String[] getsubject4(String pais){
        String[] subject4=new String[3];
        if(pais.equalsIgnoreCase("cs 1.1")){
           subject4[0]="ICT Tools";
            subject4[1]="Software Testing and Quality Assurance (Elective)";
            subject4[2]="Modern Databases (Elective)"; 
        }
        if(pais.equalsIgnoreCase("eng 1.1")){
            subject4[0]="Thermal Engineering";
            subject4[1]="Control Engineering";
            subject4[2]="Engineering Graphics";
        }
        
         if(pais.equalsIgnoreCase("bus 1.1")){
            subject4[0]="International Human Resource Management";
            subject4[1]="Business and Corporations Law";
            subject4[2]="Marketing Management"; 
        }
          if(pais.equalsIgnoreCase("cs 1.2")){
            subject4[0]="Artificial Intelligence (Elective)";
            subject4[1]="Distributed and Parallel Systems";
            subject4[2]="High Speed Networks";
        }
          if(pais.equalsIgnoreCase("eng 1.2")){
            subject4[0]="Linear Algebra";
            subject4[1]="Engineering Graphics";
            subject4[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 1.2")){
            subject4[0]="Linear Algebra";
            subject4[1]="Engineering Graphics";
            subject4[2]="Critical Thinking";
        }
          if(pais.equalsIgnoreCase("cs 2.1")){
            subject4[0]="Cyber Security";
            subject4[1]="Project Part- I";
            subject4[2]="Practical Training";
        }
          if(pais.equalsIgnoreCase("eng 2.1")){
            subject4[0]="Mini Project – II";
            subject4[1]="Control Engineering";
            subject4[2]="Elements of Electrical Engineering";
        }
        
          if(pais.equalsIgnoreCase("bus 2.1")){
             subject4[0]="Human Resource Management";
            subject4[1]="Management of Change";
            subject4[2]="Strategic Human Resource Development";
        }
          if(pais.equalsIgnoreCase("cs 2.2")){
            subject4[0]="Cyber Security";
            subject4[1]="Project Part- I";
            subject4[2]="Practical Training";
        }
          if(pais.equalsIgnoreCase("eng 2.2")){
            subject4[0]="Thermal Engineering";
            subject4[1]="Control Engineering";
            subject4[2]="Engineering Graphics";
        }
          if(pais.equalsIgnoreCase("bus 2.2")){
            subject4[0]="Management of Change";
            subject4[1]="Marketing Management";
            subject4[2]="Advanced Studies in industrial Relations";
        }   
          if(pais.equalsIgnoreCase("cs 3.1")){
             subject4[0]="High Speed Networks";
            subject4[1]="Data Structure and Algorithms";
            subject4[2]="Comprehensive Assessment - II";
        }
          if(pais.equalsIgnoreCase("eng 3.1")){
            subject4[0]="Linear Algebra";
            subject4[1]="Engineering Graphics";
            subject4[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 3.1")){
            subject4[0]="Management of Change";
            subject4[1]="Marketing Management";
            subject4[2]="Advanced Studies in industrial Relations";
        }
          if(pais.equalsIgnoreCase("cs 3.2")){
              subject4[0]="ICT Tools";
            subject4[1]="Software Testing and Quality Assurance (Elective)";
            subject4[2]="Modern Databases (Elective)";
        }
          if(pais.equalsIgnoreCase("eng 3.2")){
             subject4[0]="Ethics & Values";
            subject4[1]="Thermodynamics";
            subject4[2]="Dynamics of Machinery I";
        }
          if(pais.equalsIgnoreCase("bus 3.2")){
            subject4[0]="International Human Resource Management";
            subject4[1]="Business and Corporations Law";
            subject4[2]="Marketing Management"; 
        }
          if(pais.equalsIgnoreCase("cs 4.1")){
            subject4[0]="Artificial Intelligence (Elective)";
            subject4[1]="Distributed and Parallel Systems";
            subject4[2]="High Speed Networks";
        }
          if(pais.equalsIgnoreCase("eng 4.1")){
            subject4[0]="Linear Algebra";
            subject4[1]="Engineering Graphics";
            subject4[2]="English - Foreign Language";
        }
          if(pais.equalsIgnoreCase("bus 4.1")){
           subject4[0]="International Human Resource Management";
            subject4[1]="Business and Corporations Law";
            subject4[2]="Marketing Management";
        }
          if(pais.equalsIgnoreCase("cs 4.2")){
            subject4[0]="Cyber Security";
            subject4[1]="Project Part- I";
            subject4[2]="Practical Training";
        }
          if(pais.equalsIgnoreCase("eng 4.2")){
             subject4[0]="Ethics & Values";
            subject4[1]="Thermodynamics";
            subject4[2]="Dynamics of Machinery I";
        }
          if(pais.equalsIgnoreCase("bus 4.2")){
             subject4[0]="International Human Resource Management";
            subject4[1]="Business and Corporations Law";
            subject4[2]="Marketing Management";
        } 
          return subject4;
              
    }
    
    private void ddCourseIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddCourseIdItemStateChanged

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddMainSubject1.setModel(new DefaultComboBoxModel(this.getmainsubject1(this.ddCourseId.getSelectedItem().toString())));
            }
        }

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddMainSubject2.setModel(new DefaultComboBoxModel(this.getmainsubject2(this.ddCourseId.getSelectedItem().toString())));
            }
        }

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddSubject1.setModel(new DefaultComboBoxModel(this.getsubject1(this.ddCourseId.getSelectedItem().toString())));
            }
        }

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddSubject2.setModel(new DefaultComboBoxModel(this.getsubject2(this.ddCourseId.getSelectedItem().toString())));
            }
        }

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddSubject3.setModel(new DefaultComboBoxModel(this.getsubject3(this.ddCourseId.getSelectedItem().toString())));
            }
        }

        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.ddCourseId.getSelectedIndex()>=0){
                this.ddSubject4.setModel(new DefaultComboBoxModel(this.getsubject4(this.ddCourseId.getSelectedItem().toString())));
            }
        }
    }//GEN-LAST:event_ddCourseIdItemStateChanged

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        UnderGraduate_CourseDetail ugc=new UnderGraduate_CourseDetail();

        int x=dbops.checkRegId3(txtRegId.getText(),ddCourseId.getSelectedItem().toString());

        if(x==1){
            ugc.setFaculty(ddFaculty.getSelectedItem().toString());
            ugc.setRegId(Integer.parseInt(txtRegId.getText()));
            ugc.setCourseId((String) (ddCourseId.getSelectedItem()));
            ugc.setNumOfYears(Integer.parseInt(ddNumOfYears.getSelectedItem().toString()));
            ugc.setMainSubject1(ddMainSubject1.getSelectedItem().toString());
            ugc.setMainSubject2(ddMainSubject2.getSelectedItem().toString());
            ugc.setSubject1(ddSubject1.getSelectedItem().toString());
            ugc.setSubject2(ddSubject2.getSelectedItem().toString());
            ugc.setSubject3(ddSubject3.getSelectedItem().toString());
            ugc.setSubject4(ddSubject4.getSelectedItem().toString());

            dbops.underGraduateCourse(ugc);
            JOptionPane.showMessageDialog(this, "Successfull Inserted");
            txtRegId.setText("");
        }

        else if(x==0){
            JOptionPane.showMessageDialog(this, "reg id and course id already exist");
            txtRegId.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "error occured");
        }
        

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void ddFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddFacultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddFacultyActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Course_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Course_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Course_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Course_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Course_Detail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox ddCourseId;
    private javax.swing.JComboBox ddFaculty;
    private javax.swing.JComboBox ddMainSubject1;
    private javax.swing.JComboBox ddMainSubject2;
    private javax.swing.JComboBox ddNumOfYears;
    private javax.swing.JComboBox ddSubject1;
    private javax.swing.JComboBox ddSubject2;
    private javax.swing.JComboBox ddSubject3;
    private javax.swing.JComboBox ddSubject4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField txtRegId;
    // End of variables declaration//GEN-END:variables
}
